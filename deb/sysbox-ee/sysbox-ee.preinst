#!/bin/bash
#
# Copyright: (C) 2019-2021 Nestybox Inc. All rights reserved.
#

set -e

# The following table enumerates the Linux distributions supported by this
# installer and the required kernel releases.
#
#   +=================================================+
#   |  Supported Distributions  |  Supported Kernels  |
#   +=================================================+
#   |                           |                     |
#   |   Ubuntu Bionic (18.04)   |        5.2+         |
#   |                           |                     |
#   |   Ubuntu Focal (20.04)    |        5.4+         |
#   |                           |                     |
#   |   Debian Buster (10)      |        5.5+         |
#   |                           |                     |
#   |   Debian Bullseye (11)    |        5.5+         |
#   |___________________________|_____________________|


declare -A sysbox_support_matrix
sysbox_support_matrix=(
    ["Ubuntu 18.04"]="5.2"
    ["Ubuntu 20.04"]="5.4"
    ["Debian 10"]="5.5"
    ["Debian 11"]="5.5"
)

# Compare two versions in SemVer format.
#
# Examples:  (1.0.1, 1.0.1) = 0
#            (1.0.1, 1.0.2) = 2
#            (1.0.1, 1.0.0) = 1
#            (1, 1.0) = 0
#            (3.0.4.10, 3.0.4.2) = 1
#            (5.0.0-22, 5.0.0-22) = 0
#            (5.0.0-22, 5.0.0-21) = 1
#            (5.0.0-21, 5.0.0-22) = 2
#
function version_compare() {

    if [[ $1 == $2 ]]
    then
        return 0
    fi

    local IFS='.|-'
    local i ver1=($1) ver2=($2)

    # Fill empty fields in ver1 with zeros.
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done

    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # Fill empty fields in ver2 with zeros.
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done

    return 0
}

# Extract required distro details.
function current_distro_details() {

    local distro=$(lsb_release -is)
    local release=$(lsb_release -rs)

    echo "${distro}" "${release}"
}

#
# Enforce sysbox's kernel-requirements matrix.
#
function verify_compatibility() {

    local cur_distro=$(current_distro_details)
    local cur_kernel=$(uname -r | cut -d'-' -f1)
    local found_supported_distro=false
    local found_supported_kernel=false

    # Iterate through the support_matrix and verify that minimum requirements
    # are met.
    for distro in "${!sysbox_support_matrix[@]}"; do

        # Verify distro compatibility.
        if [[ ${distro} = ${cur_distro} ]]; then
            found_supported_distro=true

            # Verify kernel compatibility.
            version_compare ${cur_kernel} ${sysbox_support_matrix[$distro]} && :
            if [[ $? -le 1 ]]; then
                found_supported_kernel=true
            fi

            break
        fi
    done

    if [[ ${found_supported_distro} = false ]]; then
        echo "Unsupported linux distribution: ${cur_distro}"
        exit 1
    fi

    if [[ ${found_supported_kernel} = false ]]; then
        echo "Unsupported linux kernel: ${cur_kernel}"
        exit 1
    fi
}

case "$1" in
    install)
        # Verify that sysbox's system requirements are met.
        verify_compatibility

        exit 0
        ;;

    upgrade|abort-upgrade)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
        ;;
esac

#DEBHELPER#
