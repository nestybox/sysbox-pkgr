#!/bin/bash
#
# Copyright: (C) 2019-2022 Nestybox Inc. All rights reserved.
#

set -e

# Source debconf library.
. /usr/share/debconf/confmodule

# Dockerd default configuration dir/file.
dockerCfgDir="/etc/docker"
dockerCfgFile="${dockerCfgDir}/daemon.json"

# UID-shifting module
shiftfs_module="shiftfs"

#
# Determines if docker network configuration is complete. That is, 'bip'
# and 'default-address-pools' attributes are properly configured.
#
function docker_network_valid_config() {

    # Matching pattern:
    #
    #   "bip": "172.20.0.1/16"
    #   "default-address-pools": [
    #
    if [[ -f ${dockerCfgFile} ]] &&
        egrep -q "^[ ]+\"bip\": \"[0-9.]+.*\"" ${dockerCfgFile} &&
        egrep -q "^[ ]+\"default-address-pools\"" ${dockerCfgFile}; then
        return 0
    fi

    return 1
}

#
# Finds out if there are existing docker containers in the system.
#
function docker_existing_containers() {
    if docker ps -a | wc -l | egrep -q "1$"; then
        return 1
    fi

    return 0
}

#
# Check presence/absence of shiftfs module.
#
function shiftfs_mount_supported() {
    if modprobe "${shiftfs_module}" &>/dev/null; then
        return 0
    fi

    return 1
}

#
# Check for idmapped-mount support.
#
function idmapped_mount_supported() {
    local kernel_rel=$(uname -r)
    local rel_major=$(echo ${kernel_rel} | cut -d'.' -f1)
    local rel_minor=$(echo ${kernel_rel} | cut -d'.' -f2)

    if [ ${rel_major} -gt 5 ] || ([ ${rel_major} -eq 5 ] && [ ${rel_minor} -ge 12 ]); then
        return 0
    fi

    return 1
}

#
# Function returns 'true' to indicate that dockerd needs to be restarted during
# Sysbox installation process. Returns 'false' otherwise.
#
function docker_restart_required() {
    if docker_network_valid_config; then
        return 1
    fi

    return 0
}

#
# Checks if the docker engine is installed on the host.
#
function docker_installed() {
    ret=$(command -v dockerd >/dev/null 2>&1)
    return $?
}

#
# Checks if the docker engine is running on the host.
#
function docker_running() {
    ret=$(pidof dockerd >/dev/null 2>&1)
    return $?
}

#
# Main
#

# If a docker-restart is required in this setup, and there are existing docker
# containers, alert user of the need to stop containers and exit installation
# process.
if docker_running && docker_restart_required && docker_existing_containers; then
    echo -e "\nThe Sysbox installer requires a docker service restart to configure" \
        "network parameters, but it cannot proceed due to existing Docker containers." \
        "Please remove them as indicated below and re-launch the installation process." \
        "Refer to Sysbox installation documentation for details.\n" \
        "\t\"docker rm \$(docker ps -a -q) -f\"\n"
    exit 1
fi

# If neither 'idmapping' nor 'shiftfs' is supported, we must alert the user of
# its potential side effects.
if ! idmapped_mount_supported && ! shiftfs_mount_supported; then
    echo -e "\nYour OS does not support 'idmapped' feature (kernel < 5.12), nor it" \
        " provides 'shiftfs' support. In consequence, applications within Sysbox" \
        " containers may be unable to access volume-mounts, which will show up as" \
        " owned by 'nobody:nogroup' inside the container. Refer to Sysbox" \
        " installation documentation for details.\n"
fi

#DEBHELPER#
