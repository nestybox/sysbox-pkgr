#
# Copyright 2019-2021 Nestybox, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Docker image for deploying Sysbox on a K8s host.
#
# Build with:
#
# docker build -t nestybox/sysbox-deploy-k8s .
#

# Note: we use a centos base image because it carries a systemctl that can
# communicate with the host's systemd via dbus. This does not work when using a
# ubuntu + systemd image (systemctl can't not connect to the host's dbus, even
# though the host's dbus socket was mounted into the container).

FROM centos/systemd

ARG DEST=/opt/sysbox
ARG CRICTL_VERSION="v1.20.0"
ARG CRIO_V1_20_TAR="cri-o.amd64.v1.20.3.tar.gz"
ARG CRIO_V1_21_TAR="cri-o.amd64.v1.21.3.tar.gz"

RUN yum install -y curl wget git bc which

RUN curl -Lso /bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \
    chmod +x /bin/kubectl

# dasl for yaml, toml, json parsing
RUN curl -s https://api.github.com/repos/tomwright/dasel/releases/latest | \
    grep browser_download_url | \
    grep linux_amd64 | \
    cut -d '"' -f 4 | \
    wget -qi - && mv dasel_linux_amd64 dasel && chmod +x dasel && mv ./dasel /usr/local/bin/dasel

# crictl will be copied to the host, and used by the crio installation agents
RUN wget https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz \
    && tar zxvf crictl-${CRICTL_VERSION}-linux-amd64.tar.gz -C /usr/local/bin \
    && chmod +x /usr/local/bin/crictl \
    && rm -f crictl-${CRICTL_VERSION}-linux-amd64.tar.gz

# shiftfs-dkms sources
RUN git clone --branch k5.4 https://github.com/nestybox/shiftfs-dkms.git /opt/shiftfs-k5.4 \
    && git clone --branch k5.10 https://github.com/nestybox/shiftfs-dkms.git /opt/shiftfs-k5.10 \
    && git clone --branch k5.11 https://github.com/nestybox/shiftfs-dkms.git /opt/shiftfs-k5.11 \
    && git clone --branch k5.13 https://github.com/nestybox/shiftfs-dkms.git /opt/shiftfs-k5.13

#
# Load Sysbox installation artifacts
#

COPY bin/sysbox-ce /opt/sysbox/bin

COPY systemd/50-sysbox-mod.conf /opt/sysbox/systemd/50-sysbox-mod.conf
COPY systemd/99-sysbox-sysctl.conf /opt/sysbox/systemd/99-sysbox-sysctl.conf
COPY systemd/sysbox-installer-helper.service /opt/sysbox/systemd/sysbox-installer-helper.service
COPY systemd/sysbox-removal-helper.service /opt/sysbox/systemd/sysbox-removal-helper.service
COPY systemd/sysbox-fs.service /opt/sysbox/systemd/sysbox-fs.service
COPY systemd/sysbox-mgr.service /opt/sysbox/systemd/sysbox-mgr.service
COPY systemd/sysbox.service /opt/sysbox/systemd/sysbox.service

COPY scripts/sysbox-deploy-k8s.sh /opt/sysbox/scripts/sysbox-deploy-k8s.sh
COPY scripts/sysbox-installer-helper.sh /opt/sysbox/scripts/sysbox-installer-helper.sh
COPY scripts/sysbox-removal-helper.sh /opt/sysbox/scripts/sysbox-removal-helper.sh

#
# Load CRI-O installation artifacts
#
RUN wget https://storage.googleapis.com/k8s-conform-cri-o/artifacts/${CRIO_V1_20_TAR} -O cri-o.amd64.tar.gz \
    && mkdir -p /opt/crio-deploy/bin/v1.20 \
    && mv cri-o.amd64.tar.gz /opt/crio-deploy/bin/v1.20/.

RUN wget https://storage.googleapis.com/k8s-conform-cri-o/artifacts/${CRIO_V1_21_TAR} -O cri-o.amd64.tar.gz \
    && mkdir -p /opt/crio-deploy/bin/v1.21 \
    && mv cri-o.amd64.tar.gz /opt/crio-deploy/bin/v1.21/.

COPY systemd/crio-installer.service /opt/crio-deploy/systemd/crio-installer.service
COPY systemd/crio-removal.service /opt/crio-deploy/systemd/crio-removal.service
COPY scripts/crio-extractor.sh /opt/crio-deploy/scripts/crio-extractor.sh

COPY scripts/crio-installer.sh /opt/crio-deploy/scripts/crio-installer.sh
COPY scripts/crio-removal.sh /opt/crio-deploy/scripts/crio-removal.sh

COPY systemd/kubelet-config-helper.service /opt/crio-deploy/systemd/kubelet-config-helper.service
COPY scripts/kubelet-config-helper.sh /opt/crio-deploy/scripts/kubelet-config-helper.sh

COPY systemd/kubelet-unconfig-helper.service /opt/crio-deploy/systemd/kubelet-unconfig-helper.service
COPY scripts/kubelet-unconfig-helper.sh /opt/crio-deploy/scripts/kubelet-unconfig-helper.sh

COPY config/crio-kubelet-options /opt/crio-deploy/config/crio-kubelet-options
COPY config/etc_cni_net.d_200-loopback.conf /opt/crio-deploy/config/etc_cni_net.d_200-loopback.conf
COPY config/etc_containers_registries.conf.d_000-shortnames.conf /opt/crio-deploy/config/etc_containers_registries.conf.d_000-shortnames.conf
COPY config/etc_containers_storage.conf /opt/crio-deploy/config/etc_containers_storage.conf
COPY config/etc_containers_registries.conf /opt/crio-deploy/config/etc_containers_registries.conf
COPY config/etc_containers_policy.json /opt/crio-deploy/config/etc_containers_policy.json
COPY config/etc_containers_registries.d_default.yaml /opt/crio-deploy/config/etc_containers_registries.d_default.yaml

#
# Load CRI-O patched binaries (to generate correct user-ns mappings)
#
COPY bin/crio/v1.20/crio /opt/crio-deploy/bin/v1.20/crio-patched
COPY bin/crio/v1.21/crio /opt/crio-deploy/bin/v1.21/crio-patched
