# Sysbox's sysctl.d requirements

# Enable user-namespaces in kernel.
kernel.unprivileged_userns_clone = 1

# Increase default "inotify" kernel resources for scaling purposes.
fs.inotify.max_queued_events = 1048576
fs.inotify.max_user_watches = 1048576
fs.inotify.max_user_instances = 1048576

# Increase keyring max-keys for scaling purposes.
#
# In debian-based distros (e.g., Ubuntu) the kernel keyring max keys
# limit is set to 200 for non-root users.  This is too low for
# Sysbox. For example, for a sys container based K8s cluster, the
# number of keys required is:
#
#             keys = 35 + (k8s_workers * 23) + (2 * pods)
#
# That is, a 10-node cluster would need 282 keys.
#
# In a large bare-metal machine, we expect ~100 sys containers. That would
# consume ~11K keys.  To be conservative, we set maxkeys to 20K. Note that since
# each key consumes ~70 bytes on average, the total mem consumption assuming all
# 20K keys are used is 20K * 70 = 1.4MB.
kernel.keys.maxkeys = 20000
kernel.keys.maxbytes = 1400000

# Increase the kernel's max PID limit to it's max value since Sysbox containers
# are often used as VM-like environments and can consume hundreds or thousands
# of PIDs each. For Sysbox deployments on K8s, we limit each pod to 16K pids via
# the CRI-O config file. For Sysbox deployments in Docker hosts, use Docker's
# "--pids-limit" option to fix this limit.
kernel.pid_max = 4194304

# Increases the maximum number of memory map areas a process may have. This is
# a requirement for mmap-demanding apps such as Elastic-search.
vm.max_map_count=262144